{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/contacts.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filterName","filterNames","value","onChange","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","res","data","newObj","post","id","put","obj","delete","Person","person","setPersons","setDisplayPeople","persons","displaypeople","setMessage","setSuccess","name","number","onClick","e","preventDefault","console","log","window","confirm","newArr","filter","x","contactService","deletedP","catch","err","Persons","displayPeople","map","Notification","message","success","className","checkName","find","toLowerCase","App","useState","setNewName","setNewNumber","setFilterName","useEffect","initialContacts","updateNumbers","arr","makeNotification","p","msg","setTimeout","target","split","first","second","join","includes","push","checkNumber","updateContact","changedPerson","returnedPerson","alert","nameObj","length","contact","concat","error","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f3e7256.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Filter = ({filterName, filterNames}) => {\r\n    return(\r\n        <form>\r\n        <div>\r\n          filter shown with: <input value={filterName}\r\n          onChange={filterNames}></input>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from \"react\"\r\n\r\nconst PersonForm = ({addName, newName,\r\n     handleNameChange, newNumber, handleNumberChange\r\n    }) => {\r\n    return(\r\n        <form onSubmit={addName}>\r\n        <div>\r\n          name: <input value={newName}\r\n            onChange={handleNameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber}\r\n            onChange={handleNumberChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\"\r\n          >add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\nexport default PersonForm","import axios from 'axios'\r\n//added /api\r\n// const baseUrl = 'http://localhost:3001/api/persons'\r\n//adding relative url for build\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst create = newObj => {\r\n    const req = axios.post(baseUrl, newObj)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst update = (id, newObj) => {\r\n    const req = axios.put(`${baseUrl}/${id}`, newObj)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst remove = (id, obj) => {\r\n    const req = axios.delete(`${baseUrl}/${id}`)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React from \"react\"\r\nimport contactService from '../services/contacts'\r\n\r\n\r\nconst Person = ({person, setPersons, setDisplayPeople, displaypeople, persons,\r\nsetMessage, setSuccess}) => {\r\n\r\n    \r\n    // console.log('inside person', persons);\r\n\r\n    \r\n    const handleDelete = (e) =>{\r\n        e.preventDefault()\r\n        console.log('clicked delete', e);\r\n        console.log('person is', person);\r\n        if(window.confirm('Are you sure you want to delete the user?')){\r\n            let newArr = persons.filter( x => x !== person)\r\n            console.log('newArr is', newArr);\r\n            contactService\r\n                .remove(person.id)\r\n                .then(deletedP => {\r\n                    console.log('deletedP is', deletedP);\r\n                    setPersons(newArr)\r\n                    setDisplayPeople(newArr)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    setSuccess(false)\r\n                    setMessage(`Information of ${person.name} has already been removed from the server`)\r\n                })\r\n                setPersons(newArr)\r\n                setDisplayPeople(newArr)\r\n\r\n        }\r\n      }\r\n\r\n    return(\r\n        <div>\r\n            {person.name} {person.number}  \r\n            <button onClick={handleDelete}>delete</button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Person","import React from \"react\"\r\nimport Person from \"./Person\"\r\nconst Persons = ({displayPeople, setPersons, setDisplayPeople, persons,\r\n    setMessage, setSuccess}) => {\r\n    return(\r\n        <div>\r\n        {displayPeople.map(\r\n            (person) => <Person key={person.id} person={person}\r\n            setPersons={setPersons} setDisplayPeople={setDisplayPeople}\r\n            displayPeople={displayPeople} persons={persons}\r\n            setMessage={setMessage} setSuccess={setSuccess}\r\n            ></Person>\r\n          )}\r\n       </div>\r\n    )\r\n}\r\nexport default Persons","import React from 'react'\r\nimport '../index.css'\r\n\r\nconst Notification = ({ message, success }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    if(success){\r\n        return (\r\n            <div className='success'>\r\n                {message}\r\n            </div>\r\n        )\r\n\r\n    } else{\r\n        return (\r\n            <div className=\"error\">\r\n              {message}\r\n            </div>\r\n          )\r\n    }\r\n  \r\n\r\n  }\r\nexport default Notification  ","import React, { useState, useEffect } from 'react'\nimport Filter from \"./components/Filter\"\nimport PersonForm from './components/PersonForm'\nimport Persons from \"./components/Persons\"\nimport contactService from './services/contacts'\nimport Notification from './components/Notification'\n\nconst checkName = (name, persons) => {\n  return persons.find(person => name.toLowerCase() === person.name.toLowerCase())\n}\n\nconst checkNumber = (number, persons) => {\n  return persons.find(person => number === person.number)\n}\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [ displayPeople, setDisplayPeople ] = useState(persons)\n  const [ message, setMessage ] = useState(null)\n  const [ success, setSuccess ] = useState(null)\n\n  useEffect( () => {\n    contactService\n      .getAll()\n      .then(initialContacts => {\n        console.log('getting contacts', initialContacts);\n        setPersons(initialContacts)\n        setDisplayPeople(initialContacts)\n      })\n  }, [])\n\n\n  const handleNameChange = (e) => {\n    console.log(newName);\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const updateNumbers = (arr) => {\n    setPersons(arr)\n    setDisplayPeople(arr)\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  const makeNotification = (p, msg) => {\n    setMessage(`person ${p.name} has been ${msg}!`)\n    setTimeout( () => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  const addName = (e) => {\n    e.preventDefault()\n    console.log(e.target);\n    console.log(newName);\n    console.log(newNumber);\n\n    if (checkName(newName, persons) && !checkNumber(newNumber, persons)) {\n      let updateContact = persons.find( p => p.name === newName)\n      let changedPerson = {...updateContact, number: newNumber}\n      contactService\n        .update(updateContact.id, changedPerson)\n        .then( returnedPerson => {\n          let newArr = persons.map(person => person.name !== newName? person: returnedPerson )\n          updateNumbers(newArr)\n          //added\n          // console.log('inside update', returnedPerson);\n          // setMessage(`person ${returnedPerson.name} has been UPDATED!`)\n          setSuccess(true)\n          makeNotification(returnedPerson, 'UPDATED')\n        })\n    } else if (checkName(newName,persons)){\n      console.log(\"found\");\n      alert(`${newName} is already added to phonebook`)\n      setNewName(\"\")\n    }\n     else {\n      const nameObj = {\n        name: newName,\n        number: newNumber,\n        id: persons.length+1\n      }\n      contactService\n        .create(nameObj)\n        .then(contact => {\n          console.log('ADDING', contact);\n          let newArr = persons.concat(contact)\n          updateNumbers(newArr)\n\n          // console.log('inside update', contact);\n          // setMessage(`person ${contact.name} has been ADDED!`)\n          setSuccess(true)\n          makeNotification(contact, 'ADDED')\n        })\n        .catch(error => {\n          // this is the way to access the error message\n          console.log(error.response.data)\n          setMessage(error.response.data.error)\n        })\n    }\n  }\n\n  const filterNames = (e) => {\n    const name = e.target.value.toLowerCase();\n    console.log(name);\n    let newArr = []\n\n\n    console.log(\"persons are \", persons);\n    for(let person of persons){\n      let [first, ...second] = person.name.toLowerCase().split(\" \")\n      second = second.join(\"\")\n      // console.log(first, second);\n      if( first.includes(name)  || second.includes(name)){\n        console.log(\"includes!!\");\n        console.log(first,second, \"<- includes\");\n        console.log(\"person is\", person);\n        newArr.push(person)\n      } else {\n        console.log(\"doesnt\");\n      }\n    }\n\n    console.log(\"newarr is\", newArr);\n    console.log(\"SETTTING\");\n    setDisplayPeople(newArr)\n    setFilterName(name)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}\n      success={success}></Notification>\n      <Filter filterName={filterName} filterNames={filterNames}></Filter>\n\n      <h2>Add new</h2>\n      <PersonForm\n      addName={addName}\n      newName={newName}\n      newNumber={newNumber}\n      handleNameChange={handleNameChange}\n      handleNumberChange={handleNumberChange}\n      ></PersonForm>\n      \n      <h2>Numbers</h2>\n      <Persons displayPeople={displayPeople}\n      setPersons={setPersons} setDisplayPeople={setDisplayPeople}\n      persons={persons} setMessage={setMessage} setSuccess={setSuccess}\n      ></Persons>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}